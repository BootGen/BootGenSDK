openapi: '3.0.0'
info:
  version: 1.0.0
  title: 'Friends With Pets'
  license:
    name: MIT
servers:
  - url: http://localhost/api
paths:
  /users:
    get:
      security:
      - bearerAuth: []
      summary: retrieve list of users
      operationId: getUsers
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      security:
      - bearerAuth: []
      summary: add a new element to the collection
      operationId: addUsers
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful insertion
  /users/{userId}:
    get:
      security:
      - bearerAuth: []
      summary: retrieve users resource
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      security:
      - bearerAuth: []
      summary: update users resource
      operationId: updateUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful update
    delete:
      security:
      - bearerAuth: []
      summary: delete users resource
      operationId: deleteUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful deletion
  /users/{userId}/friends:
    get:
      security:
      - bearerAuth: []
      summary: retrieve list of friends
      operationId: getFriends
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      security:
      - bearerAuth: []
      summary: add a new element to the collection
      operationId: addFriends
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful insertion
  /users/{userId}/friends/{friendId}:
    get:
      security:
      - bearerAuth: []
      summary: retrieve friends resource
      operationId: getFriendById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: friendId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      security:
      - bearerAuth: []
      summary: update friends resource
      operationId: updateFriendById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: friendId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful update
    delete:
      security:
      - bearerAuth: []
      summary: delete friends resource
      operationId: deleteFriendById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: friendId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful deletion
  /users/{userId}/pets:
    get:
      security:
      - bearerAuth: []
      summary: retrieve list of pets
      operationId: getPets
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      security:
      - bearerAuth: []
      summary: add a new element to the collection
      operationId: addPets
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: successful insertion
  /users/{userId}/pets/{petId}:
    get:
      security:
      - bearerAuth: []
      summary: retrieve pets resource
      operationId: getPetById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
    put:
      security:
      - bearerAuth: []
      summary: update pets resource
      operationId: updatePetById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: successful update
    delete:
      security:
      - bearerAuth: []
      summary: delete pets resource
      operationId: deletePetById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful deletion
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
    Pet:
      type: object
      required:
        - id
        - name
        - user_id
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
        user_id:
          type: integer
          format: int32
