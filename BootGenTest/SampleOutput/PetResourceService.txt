/* 
 * Generated by BootGen https://github.com/BootGen/BootGenVue
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Authorization;
using Microsoft.EntityFrameworkCore.ChangeTracking;

namespace UsersWithFriends.Services
{
    public class UsersPetsService : IUsersPetsService
    {
        public User CurrentUser { get; set; }

        public ServiceResponse<List<Pet>> GetPets(int userId)
        {
            using (var db = new DataContext())
            {
                var query = db.Pets
                                .Where(item => item.UserId == userId);
                return new ServiceResponse<List<Pet>>
                {
                    StatusCode = 200,
                    ResponseData = query.ToList()
                };
            }
        }

        public ServiceResponse<Pet> GetPet(int userId, int petId)
        {
            using (var db = new DataContext())
            {
                var item = db.Pets
                             .Where(item => item.Id == petId).FirstOrDefault();
                if (item == null)
                    return new ServiceResponse<Pet>
                    {
                        StatusCode = 404
                    };
                return new ServiceResponse<Pet>
                {
                    StatusCode = 200,
                    ResponseData = item
                };
            }
        }

        public ServiceResponse<Pet> AddPet(int userId, Pet pet)
        {
            pet.UserId = userId;
            EntityEntry<Pet> entityEntry;
            using (var db = new DataContext())
            {
                entityEntry = db.Pets.Add(pet);
                db.SaveChanges();
            }
            return new ServiceResponse<Pet>
            {
                StatusCode = 200,
                ResponseData = entityEntry.Entity
            };
        }

        public ServiceResponse<Pet> UpdatePet(int userId, int petId, Pet pet)
        {
            using (var db = new DataContext())
            {
                var original = db.Pets
                            .Where(item => item.Id == petId).FirstOrDefault();
                EntityEntry<Pet> entityEntry;
                entityEntry = db.Pets.Update(original);
                original.Name = pet.Name;
                original.Kind = pet.Kind;
                original.UserId = pet.UserId;
                db.SaveChanges();
                return new ServiceResponse<Pet>
                {
                    StatusCode = 200,
                    ResponseData = entityEntry.Entity
                };
            }
        }

        public ServiceResponse DeletePet(int userId, int petId)
        {
            using (var db = new DataContext())
            {
                var item = db.Pets.Where(item => item.Id == petId).First();
                db.Pets.Remove(item);
                db.SaveChanges();
            }
            return new ServiceResponse
            {
                StatusCode = 200
            };
        }
    }
}
