/* 
 * Generated by BootGen https://github.com/BootGen/BootGenVue
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using Microsoft.EntityFrameworkCore;
using Microsoft.AspNetCore.Authorization;
using Microsoft.EntityFrameworkCore.ChangeTracking;
using UsersWithFriends.Services;

namespace UsersWithFriends.Controllers
{
    [ApiController]
    [Route("/users")]
    [Authorize]
    public class UsersController : BaseController
    {
        private IUsersService service;
        public UsersController(IUsersService service)
        {
            this.service = service;
        }
        
        [HttpGet]
        public IActionResult GetUsers()
        {
            service.CurrentUser = CurrentUser;
            var response = service.GetUsers();
            return new ObjectResult(response.ResponseData) { StatusCode = response.StatusCode };
        }

        [HttpGet]
        [Route("{userId}")]
        public IActionResult GetUser([FromRoute] int userId)
        {
            service.CurrentUser = CurrentUser;
            var response = service.GetUser(userId);
            return new ObjectResult(response.ResponseData) { StatusCode = response.StatusCode };
        }

        [HttpPost]
        public IActionResult AddUser([FromBody] User user)
        {
            service.CurrentUser = CurrentUser;
            var response = service.AddUser(user);
            return new ObjectResult(response.ResponseData) { StatusCode = response.StatusCode };
        }

        [HttpPut]
        [Route("{userId}")]
        public IActionResult UpdateUser([FromRoute] int userId, [FromBody] User user)
        {
            service.CurrentUser = CurrentUser;
            var response = service.UpdateUser(userId, user);
            return new ObjectResult(response.ResponseData) { StatusCode = response.StatusCode };
        }

        [HttpDelete]
        [Route("{userId}")]
        public IActionResult DeleteUser([FromRoute] int userId)
        {
            service.CurrentUser = CurrentUser;
            var response = service.DeleteUser(userId);
            return new ObjectResult(null) { StatusCode = response.StatusCode };
        }
    }
}
